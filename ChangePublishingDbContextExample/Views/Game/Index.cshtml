@model ChangePublishingDbContextExample.Models.GameViewModel

@{
    ViewBag.Title = "Game";
}

<h2>Players in Game Lobby</h2>

<table class="table">

    @foreach (var player in Model.Players)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => player.Name)
            </td>
        </tr>
    }

</table>

<form>
    <div class="form-group">
        <label for="PlayerName">Name</label>
        <input type="text" class="form-control" id="PlayerName" placeholder="Enter name">
    </div>
    <button type="button" class="btn btn-primary" id="JoinGameButton">Join Game</button>
    <button type="button" class="btn btn-primary" id="ClearLobbyButton">(Admin) Clear Lobby</button>
</form>

@section  scripts
{
    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("~/bundles/ChangePublisher")
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">

            var myHub;

            var itemsAdded = function (items)
            {
                alert('');
                /*items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    scope.models.games.push(item);
                    scope.$apply();
                });*/
            };

            var itemsRemoved = function (items) {

                /*items.forEach(function (item, index)
                {
                    // TODO
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });*/
            };

            var itemsChanged = function (items) {
                /*items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });*/
            };

            var hubStart = function()
            {
                //$.connection.gameHub.server.x();
            }

            $(function () {
                // Declare a proxy to reference the hub.
                myHub = $.connection.gameHub;
                // start the change publisher
                startChangePublisher(myHub, [@Html.Raw(string.Join(",", Model.Guids.Select(g => "\"" + g.ToString() + "\"")))], hubStart, itemsAdded, itemsRemoved, itemsChanged);
            });

        $('#JoinGameButton').click(function () {
            $.post("Game/AddPlayer", { name: $('#PlayerName').val() });
        });

        $('#ClearLobbyButton').click(function () {
            $.post("Game/ClearList");
        });

    </script>
}