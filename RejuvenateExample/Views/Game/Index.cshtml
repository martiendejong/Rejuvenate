@using RejuvenatingExample.Models
@model IEnumerable<Game>

@{
    Layout = null;
}

<!DOCTYPE html>
<html ng-app="RejuvenatingExample" ng-controller="LandingPageController">
<head>
    <title ng-bind="models.helloAngular"></title>
</head>
<body id="body">
    <input type="text" ng-model="models.helloAngular" />
    <h1>{{models.helloAngular}}</h1>

    <!--<ul>
        <li><a href="/#/routeOne">Route One</a></li>
        <li><a href="/#/routeTwo">Route Two</a></li>
        <li><a href="/#/routeThree">Route Three</a></li>
    </ul>-->

    <div ng-repeat="game in models.games">
        {{game.Host}} ({{game.Players.length}}) <input id="{{game.Id}}" type="button" onclick="joinGame(this.id)" value="Join Game" />
    </div>

    <input type="button" onclick="hostGame()" value="Host Game" />

    <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.20/angular.min.js"></script>
    @Scripts.Render("~/bundles/RejuvenatingExample")

    <!--Script references. -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">

        var games = [
            @foreach (var game in Model)
            {
                <text>{ Id: @game.Id, Name: "@game.Name", Host: "@game.Host.Name", Players: [@Html.Raw(string.Join( ",", @game.Players.Select(player => "\"" + player.Name + "\"")))] },</text>
            }
        ];

        var myHub;

        function hostGame()
        {
            myHub.server.hostGame();
        }

        function joinGame(id)
        {
            myHub.server.joinGame(id);
        }

        $(function () {
            // Declare a proxy to reference the hub.
            myHub = $.connection.exampleHub;

            myHub.client.itemsAdded = function (type, rejuvenatorId, items)
            {
                //alert('add');
                items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    scope.models.games.push(item);
                    scope.$apply();
                });
            }

            myHub.client.itemsRemoved = function (type, rejuvenatorId, items) {

                items.forEach(function (item, index)
                {
                    // TODO
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });
            }

            myHub.client.itemsUpdated = function (type, rejuvenatorId, items) {
                items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });
            }

            // Start the connection.
            $.connection.hub.start().done(function () {
                // todo make this safe and use a token so it cant be meddled with
                myHub.server.registerRejuvenatingClient([@ViewBag.rejuvenatorId]);
                myHub.server.setUser("@ViewBag.UserEmail");
            });
        });

    </script>
</body>
</html>