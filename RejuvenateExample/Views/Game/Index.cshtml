@using RejuvenatingExample.Models
@model IEnumerable<Game>

<div class="jumbotron">
    <div ng-repeat="game in models.games" class="row">
        <div class="col-md-3">{{game.Host}}({{game.Players.length}})</div>
        <div class="col-md-3"><input class="btn-primary" id="{{game.Id}}" type="button" onclick="joinGame(this.id)" value="Join Game" /></div>
    </div>
    <input class="btn-primary" type="button" onclick="hostGame()" value="Host Game" />
</div>

<!--
    
todo--><div class="jumbotron">
    <div ng-repeat="player in models.currentgame.players"  class="row">
        <h3>Player@lol.com</h3>
    </div>
</div>

@section  scripts
{
        <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.20/angular.min.js"></script>
        @Scripts.Render("~/bundles/RejuvenatingExample")

        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!-- frontend ChangePublisher scripts -->
        <script src="~/Scripts/ChangePublisher.js"></script>

        <!--Add script to update the page and send messages.-->
        <script type="text/javascript">

            var games = [
                @foreach (var game in Model)
            {
                <text>{ Id: @game.Id, Name: "@game.Name", Host: "@game.Host.Name", Players: [@Html.Raw(string.Join( ",", @game.Players.Select(player => "\"" + player.Name + "\"")))] },</text>
            }
            ];

            var myHub;

            function hostGame()
            {
                myHub.server.hostGame();
            }

            function joinGame(id)
            {
                myHub.server.joinGame(id);
            }

            var itemsAdded = function (type, publisherId, items)
            {
                items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    scope.models.games.push(item);
                    scope.$apply();
                });
            };

            var itemsRemoved = function (type, publisherId, items) {

                items.forEach(function (item, index)
                {
                    // TODO
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });
            };

            var itemsUpdated = function (type, publisherId, items) {
                items.forEach(function (item, index)
                {
                    var scope = angular.element(document.getElementById('body')).scope();
                    var index = scope.models.games.findIndex(function(game) { return game.Id == item.Id; });
                    scope.models.games[index] = item;
                    scope.$apply();
                });
            };

            var hubStart = function()
            {
                myHub.server.setUser("@ViewBag.UserEmail");
            }

            $(function () {
                // Declare a proxy to reference the hub.
                myHub = $.connection.exampleHub;
                // start the change publisher
                startChangePublisher(myHub, [@ViewBag.PublisherId], hubStart, itemsAdded, itemsRemoved, itemsUpdated);
            });

        </script>
    }
